name: Fortify AST Scan

on:
  push:
  pull_request:
  schedule:
    - cron: '33 2 * * 0'
  workflow_dispatch:
    inputs:
      fod_tenant:
        description: 'Fortify tenant'
        required: false
      fod_user:
        description: 'Fortify user'
        required: false
      fod_pat:
        description: 'Fortify API token'
        required: false
      ssc_url:
        description: 'SSC URL'
        required: false
      ssc_token:
        description: 'SSC token'
        required: false
      sc_client_auth_token:
        description: 'ScanCentral client auth token'
        required: false
      debricked_token:
        description: 'Debricked token'
        required: false

jobs:
  check-fortify-config:
    runs-on: ubuntu-latest
    outputs:
      fortify_configured: ${{ steps.check-config.outputs.fortify_configured }}
    steps:
      - name: Check Fortify Configuration
        id: check-config
        env:
          FOD_TENANT: ${{ inputs.fod_tenant || secrets.FOD_TENANT || '' }}
          FOD_USER: ${{ inputs.fod_user || secrets.FOD_USER || '' }}
          FOD_PAT: ${{ inputs.fod_pat || secrets.FOD_PAT || '' }}
          SSC_URL: ${{ inputs.ssc_url || vars.SSC_URL || '' }}
          SSC_TOKEN: ${{ inputs.ssc_token || secrets.SSC_TOKEN || '' }}
          SC_CLIENT_AUTH_TOKEN: ${{ inputs.sc_client_auth_token || secrets.SC_CLIENT_AUTH_TOKEN || '' }}
          DEBRICKED_TOKEN: ${{ inputs.debricked_token || secrets.DEBRICKED_TOKEN || '' }}
        run: |
          if [[ -n "$FOD_TENANT" && -n "$FOD_USER" && -n "$FOD_PAT" && -n "$SSC_URL" && -n "$SSC_TOKEN" && -n "$SC_CLIENT_AUTH_TOKEN" && -n "$DEBRICKED_TOKEN" ]]; then
            echo "fortify_configured=true" >> $GITHUB_OUTPUT
            echo "✅ Fortify configuration is complete" >> $GITHUB_STEP_SUMMARY
          else
            echo "fortify_configured=false" >> $GITHUB_OUTPUT
            echo "⚠️ Fortify scan skipped: Missing required secrets" >> $GITHUB_STEP_SUMMARY
            echo "The following environment variables are required:" >> $GITHUB_STEP_SUMMARY
            [[ -z "$FOD_TENANT" ]] && echo "- FOD_TENANT" >> $GITHUB_STEP_SUMMARY
            [[ -z "$FOD_USER" ]] && echo "- FOD_USER" >> $GITHUB_STEP_SUMMARY
            [[ -z "$FOD_PAT" ]] && echo "- FOD_PAT" >> $GITHUB_STEP_SUMMARY
            [[ -z "$SSC_URL" ]] && echo "- SSC_URL" >> $GITHUB_STEP_SUMMARY
            [[ -z "$SSC_TOKEN" ]] && echo "- SSC_TOKEN" >> $GITHUB_STEP_SUMMARY
            [[ -z "$SC_CLIENT_AUTH_TOKEN" ]] && echo "- SC_CLIENT_AUTH_TOKEN" >> $GITHUB_STEP_SUMMARY
            [[ -z "$DEBRICKED_TOKEN" ]] && echo "- DEBRICKED_TOKEN" >> $GITHUB_STEP_SUMMARY
          fi

  Fortify-AST-Scan:
    needs: check-fortify-config
    if: needs.check-fortify-config.outputs.fortify_configured == 'true'
    continue-on-error: true
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    env:
      FOD_TENANT: ${{ inputs.fod_tenant || secrets.FOD_TENANT || '' }}
      FOD_USER: ${{ inputs.fod_user || secrets.FOD_USER || '' }}
      FOD_PAT: ${{ inputs.fod_pat || secrets.FOD_PAT || '' }}
      SSC_URL: ${{ inputs.ssc_url || vars.SSC_URL || '' }}
      SSC_TOKEN: ${{ inputs.ssc_token || secrets.SSC_TOKEN || '' }}
      SC_CLIENT_AUTH_TOKEN: ${{ inputs.sc_client_auth_token || secrets.SC_CLIENT_AUTH_TOKEN || '' }}
      DEBRICKED_TOKEN: ${{ inputs.debricked_token || secrets.DEBRICKED_TOKEN || '' }}

    steps:
      - name: Check Out Source Code
        uses: actions/checkout@v4

      - name: Run Fortify Scan
        uses: fortify/github-action@73a3a46294d991f733b82e60e08f4daed3051ca0
        with:
          sast-scan: true
          debricked-sca-scan: true
        env:
          FOD_URL: https://ams.fortify.com
          FOD_TENANT: ${{ env.FOD_TENANT }}
          FOD_USER: ${{ env.FOD_USER }}
          FOD_PASSWORD: ${{ env.FOD_PAT }}
          SSC_URL: ${{ env.SSC_URL }}
          SSC_TOKEN: ${{ env.SSC_TOKEN }}
          SC_SAST_TOKEN: ${{ env.SC_CLIENT_AUTH_TOKEN }}
          DEBRICKED_TOKEN: ${{ env.DEBRICKED_TOKEN }}
          SC_SAST_SENSOR_VERSION: 24.4.0
          DO_EXPORT: true
          DO_JOB_SUMMARY: true

  Fortify-Skip-Notification:
    needs: check-fortify-config
    if: needs.check-fortify-config.outputs.fortify_configured != 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Notify about skipped scan
        run: |
          echo "ℹ️ Fortify scan was skipped due to missing configuration" >> $GITHUB_STEP_SUMMARY
          echo "To enable Fortify scanning, please configure the required secrets in your repository settings" >> $GITHUB_STEP_SUMMARY
