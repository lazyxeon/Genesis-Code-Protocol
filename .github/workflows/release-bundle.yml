name: Release Bundle

# Run this workflow when a new release is created
on:
  release:
    types: [published]
  workflow_dispatch:

# Default permissions for all jobs
permissions:
  contents: read

jobs:
  bundle:
    runs-on: ubuntu-latest
    # This job needs write access to upload the bundle and SBOMs
    permissions:
      contents: write
    outputs:
      release-tag: ${{ steps.setup.outputs.release-tag }}
      artifacts-ready: ${{ steps.upload.outputs.artifacts-ready }}
    env:
      RELEASE_TAG: ${{ github.ref_name }}
    steps:
      # Checkout the repository at a known commit
      - uses: actions/checkout@v4

      # Set up release information
      - name: Setup release info
        id: setup
        run: |
          set -euo pipefail
          echo "release-tag=$RELEASE_TAG" >> "$GITHUB_OUTPUT"
          echo "Setting up release for tag: $RELEASE_TAG"

      # Prepare a staging directory and create a ZIP of selected folders
      - name: Prepare staging
        run: |
          set -euo pipefail
          rm -rf dist
          mkdir -p dist
          echo "Creating release bundle for tag: $RELEASE_TAG"
          if [ ! -d "cli_bundle" ] || [ ! -d "Documents" ] || [ ! -d "scripts" ]; then
            echo "Error: Required directories (cli_bundle, Documents, scripts) not found"
            exit 1
          fi
          zip -r "dist/GCP_${RELEASE_TAG}_Field_Kit.zip" "cli_bundle" "Documents" "scripts" \
            -x "*.git*" "*.github*"
          echo "Bundle created: GCP_${RELEASE_TAG}_Field_Kit.zip"
          ls -la dist/

      # Generate SPDX SBOM for the bundled artifact
      - name: SBOM (SPDX)
        uses: anchore/sbom-action@v0
        with:
          path: dist/GCP_${{ env.RELEASE_TAG }}_Field_Kit.zip
          format: spdx-json
          output-file: dist/sbom.spdx.json

      # Generate CycloneDX SBOM for the bundled artifact
      - name: SBOM (CycloneDX)
        uses: anchore/sbom-action@v0
        with:
          path: dist/GCP_${{ env.RELEASE_TAG }}_Field_Kit.zip
          format: cyclonedx-json
          output-file: dist/sbom.cdx.json

      # Create a SHA-256 checksum file for all artifacts
      - name: SHA-256 checksums
        run: |
          set -euo pipefail
          cd dist
          if [ -z "$(ls -A 2>/dev/null)" ]; then
            echo "Error: No files found in dist directory"
            exit 1
          fi
          echo "Creating checksums for:"
          ls -la
          sha256sum * > SHA256SUMS.txt
          echo "Checksums created:"
          cat SHA256SUMS.txt

      # Upload the ZIP and SBOM files to the GitHub release
      - name: Upload bundle to release
        id: upload
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            dist/GCP_${{ github.ref_name }}_Field_Kit.zip
            dist/sbom.spdx.json
            dist/sbom.cdx.json
            dist/SHA256SUMS.txt

      # Signal that artifacts are ready for signing
      - name: Signal artifacts ready
        id: ready
        run: |
          set -euo pipefail
          echo "artifacts-ready=true" >> "$GITHUB_OUTPUT"
          echo "Release artifacts are ready for signing"
