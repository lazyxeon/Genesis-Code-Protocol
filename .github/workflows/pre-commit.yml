---
name: pre-commit
"on":
  push:
    paths-ignore:
      - '**/*.md'
      - '**/*.ipynb'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    env:
      FORCE_COLOR: "1"
    steps:
      - uses: actions/checkout@v4

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: "Install dev dependencies"
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: "Cache pre-commit environments"
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ runner.os }}-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            pre-commit-${{ runner.os }}-

      - name: "Install pre-commit hooks"
        run: pre-commit install-hooks

      - name: "Phase 1 (auto-fix formatting & hygiene)"
        id: phase1
        continue-on-error: true
        env:
          SKIP: ruff-lint,mypy-report,check-large-files,check-yaml
        run: |
          echo "Running Phase 1 (auto-fix allowed hooks)..."
          pre-commit run --all-files --show-diff-on-failure || true

      - name: "Guard: no uncommitted diffs after auto-fix"
        id: guard_diffs
        run: |
          if ! git diff --quiet; then
            echo 'Auto-fix phase produced changes. Commit these locally before pushing.'
            echo
            echo 'Changed files:'
            git --no-pager diff --name-only
            exit 1
          fi

      - name: "Phase 2 (enforcement: deterministic, no auto-fix)"
        id: phase2
        run: |
            echo "Running Phase 2 (enforcement)..."
            SKIP=ruff-format pre-commit run --all-files --show-diff-on-failure

      - name: "Mypy (advisory, non-blocking)"
        id: mypy_report
        continue-on-error: true
        run: |
          echo "Standalone mypy advisory run"
          mypy || true

      - name: "Summary"
        if: always()
        run: |
          echo "## Pre-commit CI Summary" >> $GITHUB_STEP_SUMMARY
          if [ "${{ steps.phase2.outcome }}" = "success" ]; then
            echo "- ✅ Enforcement phase passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "- ❌ Enforcement phase failed" >> $GITHUB_STEP_SUMMARY
          fi
          if [ "${{ steps.phase1.outcome }}" = "success" ]; then
            echo "- ✅ Auto-fix phase clean (no remaining diffs)" >> $GITHUB_STEP_SUMMARY
          else
            echo "- ⚠️ Auto-fix phase reported changes; guard prevented enforcement with dirty tree" >> $GITHUB_STEP_SUMMARY
          fi
          echo "- ℹ️ Mypy advisory (non-blocking)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Local Usage" >> $GITHUB_STEP_SUMMARY
          echo "1. Run: pre-commit run --all-files" >> $GITHUB_STEP_SUMMARY
          echo "2. If formatting issues appear: ruff format . && ruff check --fix ." >> $GITHUB_STEP_SUMMARY
          echo "3. Optional type check: mypy" >> $GITHUB_STEP_SUMMARY
