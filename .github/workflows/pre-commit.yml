name: pre-commit
on:
  push:
    paths-ignore:
      - '**/*.md'
      - '**/*.ipynb'
  pull_request:
  workflow_dispatch:

permissions:
  contents: write  # Changed from 'read' to 'write' to allow auto-commits

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    env:
      FORCE_COLOR: "1"
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Validate pre-commit config (fast fail)
        run: |
          python -m pip install --quiet pre-commit
          pre-commit validate-config

      - name: Install dev dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Cache pre-commit environments
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ runner.os }}-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            pre-commit-${{ runner.os }}-

      - name: Install pre-commit hooks
        run: pre-commit install-hooks

      - name: Phase 1 (auto-fix formatting & hygiene)
        id: phase1
        continue-on-error: true
        env:
          # Do NOT skip check-yaml now that config is validated; skip only non-fix, expensive or advisory hooks
          SKIP: ruff-lint,mypy-report,check-large-files
        run: |
          echo "Running Phase 1 (auto-fix eligible hooks)..."
          pre-commit run --all-files --show-diff-on-failure || true

      - name: Auto-commit fixes if needed
        id: auto_commit
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          # Use the appropriate branch (PR branch or current branch)
          git checkout ${{ github.head_ref || github.ref_name }}
          
          # Check if there are changes to commit
          if ! git diff --quiet; then
            echo "Changes detected, committing fixes..."
            git add .
            git commit -m "chore: pre-commit auto-fix [skip ci]"
            git push origin ${{ github.head_ref || github.ref_name }}
            echo "::set-output name=changes_committed::true"
          else
            echo "No changes to commit"
            echo "::set-output name=changes_committed::false"
          fi

      - name: "Phase 2 (enforcement: deterministic, no auto-fix)"
        id: phase2
        # Skip this step if we just committed changes
        if: steps.auto_commit.outputs.changes_committed != 'true'
        run: |
          echo "Running Phase 2 (enforcement)..."
          SKIP=ruff-format pre-commit run --all-files --show-diff-on-failure

      - name: Mypy (advisory, non-blocking)
        id: mypy_report
        continue-on-error: true
        run: |
          echo "Standalone mypy advisory run"
          mypy || true

      - name: Summary
        if: always()
        run: |
          echo "## Pre-commit CI Summary" >> $GITHUB_STEP_SUMMARY
          if [ "${{ steps.phase2.outcome }}" = "success" ] || [ "${{ steps.auto_commit.outputs.changes_committed }}" = "true" ]; then
            echo "- ✅ Checks passed or changes auto-committed" >> $GITHUB_STEP_SUMMARY
          else
            echo "- ❌ Enforcement phase failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ steps.auto_commit.outputs.changes_committed }}" = "true" ]; then
            echo "- 🔧 Auto-fixes were committed to the branch" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "- ℹ️ Mypy advisory (non-blocking)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Local Usage" >> $GITHUB_STEP_SUMMARY
          echo "1. Run: pre-commit run --all-files" >> $GITHUB_STEP_SUMMARY
          echo "2. If formatting issues appear: ruff format . && ruff check --fix ." >> $GITHUB_STEP_SUMMARY
          echo "3. Optional type check: mypy" >> $GITHUB_STEP_SUMMARY