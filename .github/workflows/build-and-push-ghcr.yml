# Robust GHCR build-and-push workflow with correct permissions and PAT fallback.
name: Build and Push Docker image to GHCR
on:
  push:
    branches:
      - main
  pull_request:
    types: [closed] # only build/push on merged PRs if you prefer; adjust as needed
permissions:
  contents: read
  packages: write
  id-token: write
jobs:
  build-and-push:
    name: Build and Push
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Authenticate to GitHub Container Registry (preferred: GITHUB_TOKEN)
        id: login
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          # Preferred: use the automatically provided GITHUB_TOKEN (requires `packages: write` permission above).
          # For fork PR runs GITHUB_TOKEN may be restricted; see fallback below.
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Fallback - authenticate using GHCR_PAT if GITHUB_TOKEN failed (set GHCR_PAT secret in repo)
        if: steps.login.outcome == 'failure' || steps.login.conclusion == 'failure'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build and push multi-arch image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ github.sha }}
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:latest
          # optional: build cache usage for faster CI
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Verify image exists in GHCR (quick check)
        run: |
          echo "Image pushed; listing recent images for the repo (requires gh cli & auth)"
          if command -v gh >/dev/null 2>&1; then
            gh api -H "Accept: application/vnd.github+json" /users/${{ github.repository_owner }}/packages | jq '.'
          else
            echo "gh cli not present; skipping verification step"
          fi
