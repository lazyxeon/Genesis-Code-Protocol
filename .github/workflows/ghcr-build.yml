name: Build & Push (GHCR)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch: {}

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      BUILDKIT_PROGRESS: plain     # full logs
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Compute image name (lowercase)
        id: vars
        run: echo "image=ghcr.io/${GITHUB_REPOSITORY,,}" >> "$GITHUB_OUTPUT"

      - name: Build & Push
        id: bp
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile
          push: true
          no-cache: true              # force fresh build so real error shows
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ steps.vars.outputs.image }}:latest
            ${{ steps.vars.outputs.image }}:${{ github.sha }}
          provenance: mode=max
          attests: type=sbom
          cache-from: type=gha
          cache-to: type=gha,mode=max
        continue-on-error: true       # don't stop; let us upload logs below

      - name: Save build log
        if: always()
        run: |
          mkdir -p build-logs
          echo "==== Capture runner logs for the job ====" > build-logs/build-output.txt
          # The action streams to stdout; we already have plain logs in the step output.
          # Re-print the last 400 lines of the composite run log (helps on mobile UI).
          tail -n 400 "$GITHUB_STEP_SUMMARY" 2>/dev/null || true
        shell: bash

      - name: Upload artifact (runner log)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: docker-build-log
          path: |
            build-logs/**
          if-no-files-found: ignore

      - name: Fail if build failed
        if: steps.bp.outcome != 'success'
        run: |
          echo "Build failed; see step logs above and 'docker-build-log' artifact."
          exit 1
