# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# EthicalCheck addresses the critical need to continuously security test APIs in development and in production.

# EthicalCheck provides the industry’s only free & automated API security testing service that uncovers security vulnerabilities using OWASP API list.
# Developers relies on EthicalCheck to evaluate every update and release, ensuring that no APIs go to production with exploitable vulnerabilities.

# You develop the application and API, we bring complete and continuous security testing to you, accelerating development.

# Know your API and Applications are secure with EthicalCheck – our free & automated API security testing service.

# How EthicalCheck works?
# EthicalCheck functions in the following simple steps.
# 1. Security Testing.
# Provide your OpenAPI specification or start with a public Postman collection URL.
# EthicalCheck instantly instrospects your API and creates a map of API endpoints for security testing.
# It then automatically creates hundreds of security tests that are non-intrusive to comprehensively and completely test for authentication, authorizations, and OWASP bugs your API. The tests addresses the OWASP API Security categories including OAuth 2.0, JWT, Rate Limit etc.

# 2. Reporting.
# EthicalCheck generates security test report that includes all the tested endpoints, coverage graph, exceptions, and vulnerabilities.
# Vulnerabilities are fully triaged, it contains CVSS score, severity, endpoint information, and OWASP tagging.


# This is a starter workflow to help you get started with EthicalCheck Actions

name: EthicalCheck-Workflow

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  # Customize trigger events based on your DevSecOps processes.
  push:
  pull_request:
  schedule:
    - cron: '33 16 * * 5'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      oas_url:
        description: 'OpenAPI specification URL'
        required: false
      email:
        description: 'Recipient email for the report'
        required: false

permissions:
  contents: read
  security-events: write

env:
  ETHICALCHECK_OAS_URL: ${{ inputs.oas_url || vars.ETHICALCHECK_OAS_URL || '' }}
  ETHICALCHECK_EMAIL: ${{ inputs.email || vars.ETHICALCHECK_EMAIL || '' }}

jobs:
  Trigger_EthicalCheck:
    continue-on-error: true
    permissions:
      contents: read
      security-events: write
      actions: read # required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    runs-on: ubuntu-latest

    steps:
       - name: Validate EthicalCheck inputs
         id: check
         run: |
           missing=false
           [ -z "$ETHICALCHECK_OAS_URL" ] && echo "::warning::Missing ETHICALCHECK_OAS_URL" && missing=true
           [ -z "$ETHICALCHECK_EMAIL" ] && echo "::warning::Missing ETHICALCHECK_EMAIL" && missing=true
           if [ "$missing" = true ]; then
             echo "run=false" >> "$GITHUB_OUTPUT"
             echo "EthicalCheck variables not provided. Skipping scan." >> "$GITHUB_STEP_SUMMARY"
           else
             echo "run=true" >> "$GITHUB_OUTPUT"
           fi
         env:
           ETHICALCHECK_OAS_URL: ${{ env.ETHICALCHECK_OAS_URL }}
           ETHICALCHECK_EMAIL: ${{ env.ETHICALCHECK_EMAIL }}

       - name: EthicalCheck Free & Automated API Security Testing Service
         if: steps.check.outputs.run == 'true'
         uses: Octota-GitHub/ethicalcheck-action@3ec5e93b42e591349e46635da9f909bac66c23a9
         continue-on-error: true
         with:
          # The OpenAPI Specification URL or Swagger Path or Public Postman collection URL.
          oas-url: ${{ env.ETHICALCHECK_OAS_URL }}
          # The email address to which the penetration test report will be sent.
          email: ${{ env.ETHICALCHECK_EMAIL }}
          sarif-result-file: ethicalcheck-results.sarif

       - name: Upload sarif file to repository
         if: steps.check.outputs.run == 'true' && hashFiles('ethicalcheck-results.sarif') != ''
         uses: github/codeql-action/upload-sarif@v3
         with:
          sarif_file: ./ethicalcheck-results.sarif
