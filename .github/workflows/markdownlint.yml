name: Markdownlint

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      # Pre-normalize CHANGELOG in the workspace so lint sees compliant spacing
      - name: Normalize CHANGELOG spacing (MD022/MD032) in workspace
        run: |
          python - <<'PY'
          import re
          from pathlib import Path

          path = Path("CHANGELOG.md")
          if not path.exists():
              raise SystemExit(0)

          text = path.read_text(encoding="utf-8").splitlines(keepends=True)
          HEADING_RE = re.compile(r'^(#{1,6})\s+\S')
          LIST_RE = re.compile(r'^(\s*)([-*+]|[0-9]+\.)\s+')

          def blank(s): return s.strip() == ""
          out, in_code = [], False
          i, n = 0, len(text)
          while i < n:
              line = text[i]
              if line.lstrip().startswith("```"):
                  out.append(line); in_code = not in_code; i += 1; continue
              if not in_code and HEADING_RE.match(line):
                  if len(out) > 0 and not blank(out[-1]): out.append("\n")
                  out.append(line)
                  nxt = text[i+1] if i+1 < n else ""
                  if not blank(nxt): out.append("\n")
                  i += 1; continue
              if not in_code and LIST_RE.match(line):
                  prev_nonblank = next((out[j] for j in range(len(out)-1,-1,-1) if not blank(out[j])), None)
                  if prev_nonblank is None or not LIST_RE.match(prev_nonblank):
                      if len(out) > 0 and not blank(out[-1]): out.append("\n")
                  while i < n and LIST_RE.match(text[i]) and not text[i].lstrip().startswith("```"):
                      out.append(text[i]); i += 1
                  nxt = text[i] if i < n else ""
                  if not blank(nxt): out.append("\n")
                  continue
              out.append(line); i += 1

          compact = []
          for l in out:
              if not (len(compact) >= 2 and compact[-1] == "\n" and l == "\n"):
                  compact.append(l)
          fixed = "".join(compact)
          path.write_text(fixed, encoding="utf-8")
          print("Normalized CHANGELOG.md in workspace")
          PY

      - name: Run markdownlint-cli2
        uses: DavidAnson/markdownlint-cli2-action@v19.1.0
        with:
          globs: |
            **/*.md
            #node_modules
