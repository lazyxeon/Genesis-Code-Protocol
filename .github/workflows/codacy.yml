---
name: Codacy Security Scan
run-name: ${{ github.workflow }}

"on":
  push:
  pull_request:
  schedule:
    - cron: '45 23 * * 2'
  workflow_dispatch:
    inputs:
      codacy_project_token:
        description: 'Codacy project token'
        required: false

env:
  CODACY_PROJECT_TOKEN: ${{ inputs.codacy_project_token || secrets.CODACY_PROJECT_TOKEN || '' }}

permissions:
  contents: read

jobs:
  check-codacy-token:
    runs-on: ubuntu-latest
    outputs:
      token_available: ${{ steps.check-token.outputs.token_available }}
    steps:
      - name: Check Codacy token
        id: check-token
        run: |
          if [ -n "${{ env.CODACY_PROJECT_TOKEN }}" ]; then
            echo "token_available=true" >> $GITHUB_OUTPUT
            echo "✅ Codacy token is available" >> $GITHUB_STEP_SUMMARY
          else
            echo "token_available=false" >> $GITHUB_OUTPUT
            echo "ℹ️ Codacy token is not set. Scan will be skipped." >> $GITHUB_STEP_SUMMARY
            echo "To enable Codacy scanning, set the CODACY_PROJECT_TOKEN secret in your repository settings." >> $GITHUB_STEP_SUMMARY
          fi

  codacy-security-scan:
    needs: check-codacy-token
    if: needs.check-codacy-token.outputs.token_available == 'true'
    continue-on-error: true
    permissions:
      contents: read
      security-events: write
      actions: read
    name: Codacy Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # v5

      - name: Run Codacy Analysis CLI
        if: env.CODACY_PROJECT_TOKEN != ''
        uses: codacy/codacy-analysis-cli-action@562ee3e92b8e92df8b67e0a5ff8aa8e261919c08 # v4.4.7
        with:
          project-token: ${{ env.CODACY_PROJECT_TOKEN }}
          verbose: true
          output: results.sarif
          format: sarif
          gh-code-scanning-compat: true
          max-allowed-issues: 2147483647

      - name: Upload SARIF results file
        if: env.CODACY_PROJECT_TOKEN != '' && hashFiles('results.sarif') != ''
        uses: github/codeql-action/upload-sarif@ad2a4837011b42f6947b78d6417e7c253b1c504b # v3
        with:
          sarif_file: results.sarif

      - name: Codacy scan summary
        run: |
          if [ -f "results.sarif" ]; then
            echo "✅ Codacy scan completed successfully and results uploaded." >> $GITHUB_STEP_SUMMARY
            CRITICAL=$(grep -c '"level": "critical"' results.sarif || echo 0)
            HIGH=$(grep -c '"level": "high"' results.sarif || echo 0)
            MEDIUM=$(grep -c '"level": "medium"' results.sarif || echo 0)
            LOW=$(grep -c '"level": "low"' results.sarif || echo 0)
            echo "### Scan Results Summary" >> $GITHUB_STEP_SUMMARY
            echo "- Critical issues: $CRITICAL" >> $GITHUB_STEP_SUMMARY
            echo "- High issues: $HIGH" >> $GITHUB_STEP_SUMMARY
            echo "- Medium issues: $MEDIUM" >> $GITHUB_STEP_SUMMARY
            echo "- Low issues: $LOW" >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ Codacy scan completed but no results file was generated." >> $GITHUB_STEP_SUMMARY
          fi

  codacy-skip-notification:
    needs: check-codacy-token
    if: needs.check-codacy-token.outputs.token_available != 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Notify about skipped scan
        run: |
          echo "## Codacy Security Scan Skipped" >> $GITHUB_STEP_SUMMARY
          echo "The Codacy security scan was skipped because the CODACY_PROJECT_TOKEN is not set." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### How to Enable Codacy Scanning" >> $GITHUB_STEP_SUMMARY
          echo "1. Sign up for a Codacy account at https://www.codacy.com/" >> $GITHUB_STEP_SUMMARY
          echo "2. Add your repository to Codacy" >> $GITHUB_STEP_SUMMARY
          echo "3. Get your project token from Codacy" >> $GITHUB_STEP_SUMMARY
          echo "4. Add the token as a repository secret named CODACY_PROJECT_TOKEN" >> $GITHUB_STEP_SUMMARY
