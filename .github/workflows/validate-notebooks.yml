---
name: Validate Jupyter Notebooks

"on":
  push:
    paths:
      - "**/*.ipynb"
      - ".github/workflows/validate-notebooks.yml"
      - ".github/workflows/notebook-lint-requirements.txt"
  pull_request:
    paths:
      - "**/*.ipynb"
      - ".github/workflows/validate-notebooks.yml"
      - ".github/workflows/notebook-lint-requirements.txt"
  workflow_dispatch:

permissions:
  contents: read

jobs:
  lint-notebooks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4, actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: 'pip'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: nbqa-${{ runner.os }}-${{ hashFiles('.github/workflows/notebook-lint-requirements.txt') }}
          restore-keys: |
            nbqa-${{ runner.os }}-

      - name: Install notebook linting tools
        run: |
          python -m pip install --upgrade pip==23.3.1
          pip install -r .github/workflows/notebook-lint-requirements.txt

      - name: Lint notebooks with nbqa
        run: nbqa flake8 .
          python -m pip install --upgrade pip

          for i in {1..3}; do
            echo "Installing notebook linting tools (attempt $i of 3)..."
            if pip install nbqa flake8; then
              echo "✅ Successfully installed notebook linting tools"
              break
            fi
            echo "Installation attempt $i failed, retrying in $((i*5)) seconds..."
            sleep $((i*5))
          done

          if ! command -v nbqa &> /dev/null; then
            echo "⚠️ nbqa installation failed, but continuing workflow"
          fi

      - name: Check for notebooks
        id: check-notebooks
        run: |
          NOTEBOOK_COUNT=$(find . -name "*.ipynb" -not -path "*/\.*" | wc -l)
          echo "notebook_count=$NOTEBOOK_COUNT" >> $GITHUB_OUTPUT
          echo "Found $NOTEBOOK_COUNT notebook files"

      - name: Lint notebooks with nbqa
        if: steps.check-notebooks.outputs.notebook_count != '0'
        continue-on-error: true
        run: |
          set -e
          nbqa flake8 .
          find . -name "*.ipynb" -not -path "*/\.*" > notebooks.txt
          if [ -s notebooks.txt ]; then
            echo "Linting the following notebooks:"
            cat notebooks.txt

            if nbqa flake8 $(cat notebooks.txt) --count --select=E9,F63,F7,F82 --show-source; then
              echo "✅ No critical errors found in notebooks"
            else
              echo "⚠️ Some critical errors found in notebooks"
            fi

            nbqa flake8 $(cat notebooks.txt) --count --max-complexity=10 --max-line-length=127 || true
          else
            echo "No notebooks found to lint"
          fi

      - name: Generate notebook validation summary
        if: always()
        run: |
          echo "## Jupyter Notebook Validation Results" >> $GITHUB_STEP_SUMMARY

          NOTEBOOK_COUNT="${{ steps.check-notebooks.outputs.notebook_count }}"
          if [ "$NOTEBOOK_COUNT" == "0" ]; then
            echo "- ℹ️ No notebooks found to validate" >> $GITHUB_STEP_SUMMARY
          else
            echo "- 📊 Validated $NOTEBOOK_COUNT notebook files" >> $GITHUB_STEP_SUMMARY
            echo "- ⚠️ Note: Linting errors were reported but did not fail the workflow" >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Recommendations" >> $GITHUB_STEP_SUMMARY
          echo "For better notebook quality:" >> $GITHUB_STEP_SUMMARY
          echo "- Use consistent code style in notebook cells" >> $GITHUB_STEP_SUMMARY
          echo "- Remove unnecessary imports and unused variables" >> $GITHUB_STEP_SUMMARY
          echo "- Consider using nbstripout to remove outputs before committing" >> $GITHUB_STEP_SUMMARY
